n_dias <- seq(from = 27, to = 31, by = 1)
valores <- vector()
for (i in n_dias) {
valores[i-26] <- predict(poly_reg, data.frame(idx = i,
idx2 = i^2,
idx3 = i^3,
idx4 = i^4))
}
valores
previsoes <- data.frame(n_dias, valores)
library(ggplot2)
ggplot() +
geom_point(aes(x = brazil_cases$idx, y = brazil_cases$n_infectados),
colour = 'red') +
geom_point(aes(x = previsoes$n_dias, y = previsoes$valores),
colour = 'green') +
geom_line(aes(x = brazil_cases$idx, y = predict(poly_reg, newdata = brazil_cases)),
colour = 'blue') +
ggtitle('Casos Confirmados x Número de Dias') +
xlab('Dias') +
ylab('Nº Casos Confirmados')
total <- rbind(brazil_cases, previsoes)
previsoes$n_dias2 = previsoes$n_dias^2
previsoes$n_dias3 = previsoes$n_dias^3
previsoes$n_dias3 = previsoes$n_dias^4
n_dias <- seq(from = 27, to = 31, by = 1)
valores <- vector()
for (i in n_dias) {
valores[i-26] <- predict(poly_reg, data.frame(idx = i,
idx2 = i^2,
idx3 = i^3,
idx4 = i^4))
}
previsoes <- data.frame(n_dias, valores)
previsoes$n_dias2 = previsoes$n_dias^2
previsoes$n_dias3 = previsoes$n_dias^3
previsoes$n_dias4 = previsoes$n_dias^4
total <- rbind(brazil_cases, previsoes)
library(formattable)
library(ggplot2)
library(ggrepel)
setwd("/home/robson/repositorios/AtividadesUsc/estatistica/trabalho/")
#======================================= Importando o Dataset
dataset <- read.csv("time_series_Confirmed.csv")
# dataset <- dataset[,2:3]
#======================================= Ajustando o Dataset
brazil_cases <- dataset[dataset$Country.Region =='Brazil',]
brazil_cases <- brazil_cases[40:length(brazil_cases)]
dias <- c(colnames(brazil_cases), "X3.21.20","X3.22.20")
idx <- seq(1,length(dias))
#n_infectados <- as.numeric(brazil_cases[1,])
n_infectados <- c(1,1,1,2,2,2,2,3,8,13,25,25,25,34,52,77,98,98,98,98,234,291,428,621,978,1178)
brazil_cases <- data.frame(idx, n_infectados)
#======================================= Preparando o modelo de regressão polinominal
brazil_cases$idx2 = brazil_cases$idx^2
brazil_cases$idx3 = brazil_cases$idx^3
brazil_cases$idx4 = brazil_cases$idx^4
poly_reg = lm(formula = n_infectados ~ .,
data = brazil_cases)
#======================================= Predição pelo modelo
n_dias <- seq(from = 27, to = 31, by = 1)
valores <- vector()
for (i in n_dias) {
valores[i-26] <- predict(poly_reg, data.frame(idx = i,
idx2 = i^2,
idx3 = i^3,
idx4 = i^4))
}
previsoes <- data.frame(n_dias, valores)
previsoes$n_dias2 = previsoes$n_dias^2
previsoes$n_dias3 = previsoes$n_dias^3
previsoes$n_dias4 = previsoes$n_dias^4
total <- rbind(brazil_cases, previsoes)
rm(idx, n_infectados)
library(formattable)
library(ggplot2)
library(ggrepel)
setwd("/home/robson/repositorios/AtividadesUsc/estatistica/trabalho/")
#======================================= Importando o Dataset
dataset <- read.csv("time_series_Confirmed.csv")
# dataset <- dataset[,2:3]
#======================================= Ajustando o Dataset
brazil_cases <- dataset[dataset$Country.Region =='Brazil',]
brazil_cases <- brazil_cases[40:length(brazil_cases)]
dias <- c(colnames(brazil_cases), "X3.21.20","X3.22.20")
idx <- seq(1,length(dias))
#n_infectados <- as.numeric(brazil_cases[1,])
n_infectados <- c(1,1,1,2,2,2,2,3,8,13,25,25,25,34,52,77,98,98,98,98,234,291,428,621,978,1178)
brazil_cases <- data.frame(idx, n_infectados)
rm(idx, n_infectados)
#======================================= Preparando o modelo de regressão polinominal
brazil_cases$idx2 = brazil_cases$idx^2
brazil_cases$idx3 = brazil_cases$idx^3
brazil_cases$idx4 = brazil_cases$idx^4
poly_reg = lm(formula = n_infectados ~ .,
data = brazil_cases)
#======================================= Predição pelo modelo
idx <- seq(from = 27, to = 31, by = 1)
n_infectados <- vector()
for (i in n_dias) {
valores[i-26] <- predict(poly_reg, data.frame(idx = i,
idx2 = i^2,
idx3 = i^3,
idx4 = i^4))
}
previsoes <- data.frame(idx, n_infectados)
previsoes$idx2 = previsoes$idx^2
previsoes$idx3 = previsoes$idx^3
previsoes$idx4 = previsoes$idx^4
total <- rbind(brazil_cases, previsoes)
previsoes
library(formattable)
library(ggplot2)
library(ggrepel)
setwd("/home/robson/repositorios/AtividadesUsc/estatistica/trabalho/")
#======================================= Importando o Dataset
dataset <- read.csv("time_series_Confirmed.csv")
# dataset <- dataset[,2:3]
#======================================= Ajustando o Dataset
brazil_cases <- dataset[dataset$Country.Region =='Brazil',]
brazil_cases <- brazil_cases[40:length(brazil_cases)]
dias <- c(colnames(brazil_cases), "X3.21.20","X3.22.20")
idx <- seq(1,length(dias))
#n_infectados <- as.numeric(brazil_cases[1,])
n_infectados <- c(1,1,1,2,2,2,2,3,8,13,25,25,25,34,52,77,98,98,98,98,234,291,428,621,978,1178)
brazil_cases <- data.frame(idx, n_infectados)
rm(idx, n_infectados)
#======================================= Preparando o modelo de regressão polinominal
brazil_cases$idx2 = brazil_cases$idx^2
brazil_cases$idx3 = brazil_cases$idx^3
brazil_cases$idx4 = brazil_cases$idx^4
poly_reg = lm(formula = n_infectados ~ .,
data = brazil_cases)
#======================================= Predição pelo modelo
idx <- seq(from = 27, to = 31, by = 1)
n_infectados <- vector()
for (i in n_dias) {
valores[i-26] <- predict(poly_reg, data.frame(idx = i,
idx2 = i^2,
idx3 = i^3,
idx4 = i^4))
}
previsoes <- data.frame(idx, n_infectados)
previsoes$idx2 = previsoes$idx^2
previsoes$idx3 = previsoes$idx^3
previsoes$idx4 = previsoes$idx^4
total <- rbind(brazil_cases, previsoes)
previsoes
idx <- seq(from = 27, to = 31, by = 1)
n_infectados <- vector()
for (i in n_dias) {
valores[i-26] <- predict(poly_reg, data.frame(idx = i,
idx2 = i^2,
idx3 = i^3,
idx4 = i^4))
}
previsoes <- data.frame(idx, n_infectados)
previsoes$idx2 = previsoes$idx^2
previsoes$idx3 = previsoes$idx^3
previsoes$idx4 = previsoes$idx^4
idx <- seq(from = 27, to = 31, by = 1)
n_infectados <- vector()
for (i in n_dias) {
n_infectados[i-26] <- predict(poly_reg, data.frame(idx = i,
idx2 = i^2,
idx3 = i^3,
idx4 = i^4))
}
previsoes <- data.frame(idx, n_infectados)
previsoes$idx2 = previsoes$idx^2
previsoes$idx3 = previsoes$idx^3
previsoes$idx4 = previsoes$idx^4
idx <- seq(from = 27, to = 31, by = 1)
n_infectados <- vector()
for (i in n_dias) {
n_infectados[i-26] <- predict(poly_reg, data.frame(a = i,
a2 = i^2,
a3 = i^3,
a4 = i^4))
}
idx <- seq(from = 27, to = 31, by = 1)
n_infectados <- vector()
for (i in idx) {
n_infectados[i-26] <- predict(poly_reg, data.frame(a = i,
a2 = i^2,
a3 = i^3,
a4 = i^4))
}
idx <- seq(from = 27, to = 31, by = 1)
n_infectados <- vector()
for (i in idx) {
n_infectados[i-26] <- predict(poly_reg, data.frame(a = i,
a2 = i^2,
a3 = i^3,
a4 = i^4))
}
#======================================= Predição pelo modelo
idx <- seq(from = 27, to = 31, by = 1)
n_infectados <- vector()
for (i in idx) {
n_infectados[i-26] <- predict(poly_reg, data.frame(idx = i,
idx2 = i^2,
idx3 = i^3,
idx4 = i^4))
}
previsoes <- data.frame(idx, n_infectados)
previsoes$idx2 = previsoes$idx^2
previsoes$idx3 = previsoes$idx^3
previsoes$idx4 = previsoes$idx^4
previsoes
View(brazil_cases)
brazil_cases, previsoes)
total <- rbind(brazil_cases, previsoes)
library(ggplot2)
ggplot() +
geom_point(aes(x = brazil_cases$idx, y = brazil_cases$n_infectados),
colour = 'red') +
geom_point(aes(x = previsoes$n_dias, y = previsoes$valores),
colour = 'green') +
geom_line(aes(x = total$idx, y = predict(poly_reg, newdata = total)),
colour = 'blue') +
ggtitle('Casos Confirmados x Número de Dias') +
xlab('Dias') +
ylab('Nº Casos Confirmados')
library(ggplot2)
ggplot() +
geom_point(aes(x = brazil_cases$idx, y = brazil_cases$n_infectados),
colour = 'red') +
geom_point(aes(x = previsoes$idx, y = previsoes$n_infectados),
colour = 'green') +
geom_line(aes(x = total$idx, y = predict(poly_reg, newdata = total)),
colour = 'blue') +
ggtitle('Casos Confirmados x Número de Dias') +
xlab('Dias') +
ylab('Nº Casos Confirmados')
library(ggplot2)
ggplot() +
geom_point(aes(x = brazil_cases$idx, y = brazil_cases$n_infectados),
colour = 'red') +
geom_point(aes(x = previsoes$idx, y = previsoes$n_infectados),
colour = 'green') +
geom_line(aes(x = total$idx, y = predict(poly_reg, newdata = total)),
colour = 'blue') + geom_text(size=4, hjust = 1, vjust = 1) +
ggtitle('Casos Confirmados x Número de Dias') +
xlab('Dias') +
ylab('Nº Casos Confirmados')
library(ggplot2)
ggplot() +
geom_point(aes(x = brazil_cases$idx, y = brazil_cases$n_infectados),
colour = 'red') +
geom_point(aes(x = previsoes$idx, y = previsoes$n_infectados),
colour = 'green',
text(x = previsoes$idx, y = previsoes$n_infectados, labels=previsoes$n_infectados, cex= 0.7)) +
geom_line(aes(x = total$idx, y = predict(poly_reg, newdata = total)),
colour = 'blue') + geom_text(size=4, hjust = 1, vjust = 1) +
ggtitle('Casos Confirmados x Número de Dias') +
xlab('Dias') +
ylab('Nº Casos Confirmados')
library(ggplot2)
ggplot() +
geom_point(aes(x = brazil_cases$idx, y = brazil_cases$n_infectados),
colour = 'red') +
geom_point(aes(x = previsoes$idx, y = previsoes$n_infectados),
colour = 'green')+
geom_line(aes(x = total$idx, y = predict(poly_reg, newdata = total)),
colour = 'blue') + geom_text(size=4, hjust = 1, vjust = 1) +
text(x = total$idx, y = total$n_infectados, labels=total$n_infectados, cex= 0.7) +
ggtitle('Casos Confirmados x Número de Dias') +
xlab('Dias') +
ylab('Nº Casos Confirmados')
library(ggplot2)
ggplot() +
geom_point(aes(x = brazil_cases$idx, y = brazil_cases$n_infectados),
colour = 'red') +
geom_point(aes(x = previsoes$idx, y = previsoes$n_infectados),
colour = 'green',
text( labels=previsoes$n_infectados, cex= 0.7)) +
geom_line(aes(x = total$idx, y = predict(poly_reg, newdata = total)),
colour = 'blue') + geom_text(size=4, hjust = 1, vjust = 1) +
ggtitle('Casos Confirmados x Número de Dias') +
xlab('Dias') +
ylab('Nº Casos Confirmados')
library(ggplot2)
ggplot() +
geom_point(aes(x = brazil_cases$idx, y = brazil_cases$n_infectados),
colour = 'red') +
geom_point(aes(x = previsoes$idx, y = previsoes$n_infectados),
colour = 'green',
text(x = previsoes$idx, y = previsoes$n_infectados, labels=previsoes$n_infectados, cex= 0.7))) +
geom_line(aes(x = total$idx, y = predict(poly_reg, newdata = total)),
colour = 'blue') + geom_text(size=4, hjust = 1, vjust = 1) +
ggtitle('Casos Confirmados x Número de Dias') +
xlab('Dias') +
ylab('Nº Casos Confirmados')
library(ggplot2)
ggplot() +
geom_point(aes(x = brazil_cases$idx, y = brazil_cases$n_infectados),
colour = 'red') +
geom_point(aes(x = previsoes$idx, y = previsoes$n_infectados),
colour = 'green',
text(x = previsoes$idx, y = previsoes$n_infectados, labels=previsoes$n_infectados, cex= 0.7)) +
geom_line(aes(x = total$idx, y = predict(poly_reg, newdata = total)),
colour = 'blue') + geom_text(size=4, hjust = 1, vjust = 1) +
ggtitle('Casos Confirmados x Número de Dias') +
xlab('Dias') +
ylab('Nº Casos Confirmados')
library(ggplot2)
ggplot() +
geom_point(aes(x = brazil_cases$idx, y = brazil_cases$n_infectados),
colour = 'red') +
geom_point(aes(x = previsoes$idx, y = previsoes$n_infectados),
colour = 'green',
text(x = previsoes$idx, y = previsoes$n_infectados, labels=previsoes$n_infectados)) +
geom_line(aes(x = total$idx, y = predict(poly_reg, newdata = total)),
colour = 'blue') + geom_text(size=4, hjust = 1, vjust = 1) +
ggtitle('Casos Confirmados x Número de Dias') +
xlab('Dias') +
ylab('Nº Casos Confirmados')
plot <- ggplot() +
geom_point(aes(x = brazil_cases$idx, y = brazil_cases$n_infectados),
colour = 'red') +
geom_point(aes(x = previsoes$idx, y = previsoes$n_infectados),
colour = 'green') +
geom_line(aes(x = total$idx, y = predict(poly_reg, newdata = total)),
colour = 'blue') + geom_text(size=4, hjust = 1, vjust = 1) +
ggtitle('Casos Confirmados x Número de Dias') +
xlab('Dias') +
ylab('Nº Casos Confirmados')
plot <- plot +text(x = previsoes$idx, y = previsoes$n_infectados, labels=previsoes$n_infectados, cex= 0.7)
library(ggplot2)
plot <- ggplot() +
geom_point(aes(x = brazil_cases$idx, y = brazil_cases$n_infectados),
colour = 'red') +
geom_point(aes(x = previsoes$idx, y = previsoes$n_infectados),
colour = 'green',
geom_text(aes(label=previsoes$n_infectados))) +
geom_line(aes(x = total$idx, y = predict(poly_reg, newdata = total)),
colour = 'blue') + geom_text(size=4, hjust = 1, vjust = 1) +
ggtitle('Casos Confirmados x Número de Dias') +
xlab('Dias') +
ylab('Nº Casos Confirmados')
library(ggplot2)
plot <- ggplot() +
geom_point(aes(x = brazil_cases$idx, y = brazil_cases$n_infectados),
colour = 'red') +
geom_point(aes(x = previsoes$idx, y = previsoes$n_infectados),
colour = 'green') +
geom_text(aes(label=total$n_infectados))
plot
library(ggplot2)
plot <- ggplot() +
geom_point(aes(x = brazil_cases$idx, y = brazil_cases$n_infectados),
colour = 'red') +
geom_point(aes(x = previsoes$idx, y = previsoes$n_infectados),
colour = 'green') +
geom_text(aes(x = total$idx, y = total$n_infectados, label=total$n_infectados))
plot
#======================================= Predição pelo modelo
library(ggplot2)
plot <- ggplot() +
geom_point(aes(x = brazil_cases$idx, y = brazil_cases$n_infectados),
colour = 'red') +
geom_point(aes(x = previsoes$idx, y = previsoes$n_infectados),
colour = 'green') +
geom_text(aes(x = total$idx, y = total$n_infectados, label=round(total$n_infectados))) +
ggtitle('Casos Confirmados x Número de Dias') +
xlab('Dias') +
ylab('Nº Casos Confirmados')
plot <- plot + geom_line(aes(x = total$idx, y = predict(poly_reg, newdata = total)),
colour = 'blue')
plot
library(ggplot2)
plot <- ggplot() +
geom_point(aes(x = brazil_cases$idx, y = brazil_cases$n_infectados),
colour = 'red') +
geom_point(aes(x = previsoes$idx, y = previsoes$n_infectados),
colour = 'green') +
geom_text(aes(x = total$idx, y = total$n_infectados + 10, label=round(total$n_infectados))) +
ggtitle('Casos Confirmados x Número de Dias') +
xlab('Dias') +
ylab('Nº Casos Confirmados')
plot <- plot + geom_line(aes(x = total$idx, y = predict(poly_reg, newdata = total)),
colour = 'blue')
plot
library(ggplot2)
plot <- ggplot() +
geom_point(aes(x = brazil_cases$idx, y = brazil_cases$n_infectados),
colour = 'red') +
geom_point(aes(x = previsoes$idx, y = previsoes$n_infectados),
colour = 'green') +
geom_text(aes(x = total$idx, y = total$n_infectados + 100, label=round(total$n_infectados))) +
ggtitle('Casos Confirmados x Número de Dias') +
xlab('Dias') +
ylab('Nº Casos Confirmados')
plot <- plot + geom_line(aes(x = total$idx, y = predict(poly_reg, newdata = total)),
colour = 'blue')
plot
plot <- ggplot() +
geom_point(aes(x = brazil_cases$idx, y = brazil_cases$n_infectados),
colour = 'red') +
geom_point(aes(x = previsoes$idx, y = previsoes$n_infectados),
colour = 'green') +
geom_text(aes(x = total$idx, y = total$n_infectados + 100, label=paste(round(total$n_infectados),
total$idx, sep = " / "))) +
ggtitle('Casos Confirmados x Número de Dias') +
xlab('Dias') +
ylab('Nº Casos Confirmados')
plot <- plot + geom_line(aes(x = total$idx, y = predict(poly_reg, newdata = total)),
colour = 'blue')
plot
library(formattable)
library(ggplot2)
library(ggrepel)
setwd("/home/robson/repositorios/AtividadesUsc/estatistica/trabalho/")
#======================================= Importando o Dataset
dataset <- read.csv("dataset.csv")
library(formattable)
library(ggplot2)
library(ggrepel)
setwd("/home/robson/repositorios/AtividadesUsc/estatistica/trabalho/")
#======================================= Importando o Dataset
dataset <- read.("dataset.csv")
# dataset <- dataset[,2:3]
library(formattable)
library(ggplot2)
library(ggrepel)
setwd("/home/robson/repositorios/AtividadesUsc/estatistica/trabalho/")
#======================================= Importando o Dataset
dataset <- read.csv("dataset.csv")
# dataset <- dataset[,2:3]
View(dataset)
dataset_pos <- dataset[dataset$SARS.Cov.2.exam.result=="positive"]
dataset_pos <- dataset[, dataset$SARS.Cov.2.exam.result=="positive"]
dataset_pos <- dataset[dataset$SARS.Cov.2.exam.result=="positive",]
dataset_pos <- dataset[dataset$SARS.Cov.2.exam.result=="negative",]
View(dataset_pos)
dataset_pos_var <- dataset_pos[!is.na(dataset_pos$Hematocrit),]
dataset_pos_var <- dataset_pos[is.na(dataset_pos$Hematocrit),]
dataset_pos_var <- dataset_pos[!is.nan(dataset_pos$Hematocrit),]
dataset_pos_var <- dataset_pos[!is.null(dataset_pos$Hematocrit),]
dataset_pos$Lymphocytes[1]
dataset_pos$Lymphocytes[3]
typeof(dataset_pos$Lymphocytes[3])
summarise(typdataset_pos$Lymphocytes[3])
Reduce(typdataset_pos$Lymphocytes[3])
typeof(Reduce(typdataset_pos$Lymphocytes[3]))
library(dplyr)
mutate_all(dataset, list(~na_if(.,"")))
View(dataset)
dataset <- mutate_all(dataset, list(~na_if(.,"")))
View(dataset)
dataset_pos <- dataset[dataset$SARS.Cov.2.exam.result=="positive",]
dataset_neg <- dataset[dataset$SARS.Cov.2.exam.result=="negative",]
dataset_pos_var <- dataset_pos[!is.na(dataset_pos$Hematocrit),]
View(dataset_pos_var)
dataset_neg_var <- dataset_neg[!is.na(dataset_neg$Hematocrit),]
View(dataset_neg_var)
dataset <- mutate_all(dataset, list(~na_if(.,"")))
dataset <- dataset[[!is.na(datasets$Hematocrit),]]
dataset <- dataset[!is.na(datasets$Hematocrit),]
dataset <- dataset[!is.na(dataset$Hematocrit),]
library(formattable)
library(ggplot2)
library(ggrepel)
setwd("/home/robson/repositorios/AtividadesUsc/estatistica/trabalho/")
#======================================= Importando o Dataset
dataset <- read.csv("dataset.csv")
library(dplyr)
dataset <- mutate_all(dataset, list(~na_if(.,"")))
dataset <- dataset[!is.na(dataset$Hematocrit),]
plt <- ggplot() + geom_point(data = dataset aes(x=dataset$SARS.Cov.2.exam.result, y=dataset$Hematocrit))
plt <- ggplot() + geom_point(data = dataset, aes(x=dataset$SARS.Cov.2.exam.result, y=dataset$Hematocrit))
plt
plt <- ggplot() + geom_point(data = dataset, aes(x=dataset$Hemoglobin, y=dataset$Hematocrit, color=dataset$SARS.Cov.2.exam.result))
plt
plt <- ggplot() + geom_point(aes(x=dataset$Hemoglobin, y=dataset$Hematocrit, color=dataset$SARS.Cov.2.exam.result))
plt
dataset_pos <- dataset[dataset$SARS.Cov.2.exam.result=="positive",]
dataset_neg <- dataset[dataset$SARS.Cov.2.exam.result=="negative",]
hist <- ggplot + geom_histogram(aes(x=dataset_pos$Hematocrit))
hist
hist <- ggplot() + geom_histogram(aes(x=dataset_pos$Hematocrit))
hist
hist <- ggplot() + geom_line(aes(x=dataset_pos$Patient.age.quantile, y=dataset_pos$Hematocrit))
hist
summary(dataset)
hist <- ggplot() + geom_line(aes(x=dataset_pos$Patient.age.quantile, y=as.numeric(dataset_pos$Hematocrit)))
hist
as.numeric(dataset_pos$Hematocrit)
as.numeric(as.character(dataset_pos$Hematocrit))
dataset_pos$Hematocrit <- gsub(",", ".", dataset_pos$Hematocrit))
dataset_pos$Hematocrit <- gsub(",", ".", dataset_pos$Hematocrit)
dataset_pos$Hematocrit
hist <- ggplot() + geom_line(aes(x=dataset_pos$Patient.age.quantile,
y=as.numeric(gsub(",", ".", dataset_pos$Hematocrit))))
hist
hist <- ggplot() + geom_histogram(aes(x=as.numeric(gsub(",", ".", dataset_pos$Hematocrit))))
hist
hist <- ggplot() + geom_histogram(aes(x=as.numeric(gsub(",", ".", dataset_pos$Hemoglobin))))
hist
hist <- ggplot() + geom_histogram(aes(x=as.numeric(gsub(",", ".", dataset_pos$Platelets))))
hist
hist <- ggplot() + geom_histogram(aes(x=as.numeric(gsub(",", ".", dataset_pos$Mean.platelet.volume))))
hist
hist <- ggplot() + geom_histogram(aes(x=as.numeric(gsub(",", ".", dataset_pos$Red.blood.Cells))))
hist
hist <- ggplot() + geom_histogram(aes(x=as.numeric(gsub(",", ".", dataset_pos$Lymphocytes))))
hist
hist <- ggplot() + geom_histogram(aes(x=as.numeric(gsub(",", ".", dataset_neg$Platelets))))
hist
hist <- ggplot() + geom_histogram(aes(x=as.numeric(gsub(",", ".", dataset_pos$Platelets))))
hist
